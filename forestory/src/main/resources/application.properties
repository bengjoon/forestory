# 데이터베이스 연결 설정
spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/forestory
spring.datasource.username=forestory
spring.datasource.password=0623

# thymeleaf auto reload
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=file:src/main/resources/templates/

# 정적 요소 접근
spring.mvc.static-path-pattern=/resources/**
spring.web.resources.static-locations=classpath:/static/

# Hibernate 설정 (JPA 사용 시) // 버전 업데이트 후 안씀
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

# Dialect 설정 (JPA 데이터베이스 플랫폼 지정) // 버전 업데이트 후 안씀
# spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

#jpa setting
# 데이터베이스의 구조를 생성하는 DDL을 처리하는 옵션 create: 기존테이블 삭제 후 다시 생성 (DROP + CREATE) update: 변경분만 반영
spring.jpa.hibernate.ddl-auto=update

# DDL을 생성할 때 데이터베이스 고유의 기능을 사용할 지의 여부를 지정.
spring.jpa.generate-ddl=true
logging.level.org.hibernate=info

# 실행되는 SQL문을 보여줄 것인가의 여부를 지정
spring.jpa.show-sql=true

# open in view 설정
spring.jpa.open-in-view=true

# image 업로드 
spring.servlet.multipart.enabled = true
spring.servlet.multipart.max-request-size = 50MB
spring.servlet.multipart.max-file-size = 100MB
spring.servlet.multipart.location=C:\\forestory\\img\\board\\

# session 소멸 시간 설정  기본시간:1800초(30분)
server.servlet.session.timeout=180m


#registration #naver
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=VN0KAJ05Bd59NNUkXWn_
spring.security.oauth2.client.registration.naver.client-secret=QPFDrH5vq3
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=nickname, email, name

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration #google
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=602499331468-l99m75gh7ltjpv7ndnjntucl6rvqjrg4.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
